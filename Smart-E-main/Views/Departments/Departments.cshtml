@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options


@{
    ViewBag.Title = "Department Details";
    Layout = "_Layout";

}

@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();

    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem {Value = c.Name, Text = c.DisplayName})
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

@inject IViewLocalizer _localizer

<!DOCTYPE html>
<html>
<head>
    <link href="~/assets/libs/magnific-popup/dist/magnific-popup.css" rel="stylesheet">
    <link href="~/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.css" rel="stylesheet">
    <link href="~/assets/libs/footable/css/footable.core.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/assets/libs/select2/dist/css/select2.min.css">
    <link href="~/assets/libs/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.4.0/min/dropzone.min.css"/>
    <link rel="stylesheet" type="text/css" href="~/assets/libs/bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.min.css">
    
    
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }
    </style>
</head>
<body>

<div class="preloader">
    <div class="lds-ripple">
        <div class="lds-pos"></div>
        <div class="lds-pos"></div>
    </div>
</div>

<div class="page-breadcrumb">
    <div class="row">
        <div class="col-5 align-self-center">
            <h4 class="page-title">@_localizer["DEPARTMENTS"]</h4>
            <div class="d-flex align-items-center">
            </div>
        </div>
        
    </div>
</div>
                
<div class="container-fluid">
    <div class="row">
        <button type="button" onclick="javascript:addDeparmentModal();" style="margin-left: 5px;" class="btn btn-sm btn-success float-lg-left"><i class="fas fa-plus"><span> Add Department</span></i></button>
    </div>
    
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="tblDepartments" class="table table-striped">
                            <thead>
                            <tr>
                                <th style="width: 160px;">@_localizer["Department Name"]</th>
                                <th style="width: 160px;">@_localizer["HOD Name"]</th>
                                <th style="width: 50px"></th>
                            </tr>
                            </thead>
                            <tbody>

                            <tfoot>
                            <tr>
                                <th>@_localizer["Department Name"]</th>
                                <th >@_localizer["HOD Name"]</th>
                                <th></th>
                            </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="addDepartmentModal" class="modal fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Create Department & Assign HOD</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="txtDepartmentName" class="control-label">Department Name</label>
                        <input type="text" class="form-control" id="txtDepartmentName" style="width: 100%" required/>
                    </div>
                    <div class="form-group">
                        <label for="cbHod" class="control-label">HOD Name</label>
                        <select class="select2 form-control" id="cbHod" style="width: 100%; height: 36px;">
                         
                        </select>
                    </div>
                       
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-info waves-effect" data-dismiss="modal">Cancel</button>
                <button type="button" id="btnCreateAssignment" onclick="createDepartment()" class="btn btn-outline-success waves-effect waves-light">Create</button>
            </div>
        </div>
    </div>
</div>
    
    


</body>
<div>
    <script src="~/assets/libs/moment/moment.js"></script>
    <script src="~/assets/libs/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker-custom.js"></script>
    <script src="~/assets/extra-libs/DataTables/datatables.min.js"></script>
    <script src="~/dist/js/pages/datatable/datatable-basic.init.js"></script>
    <script src="~/assets/libs/select2/dist/js/select2.full.min.js"></script>
    <script src="~/assets/libs/select2/dist/js/select2.min.js"></script>
    <script src="~/dist/js/pages/forms/select2/select2.init.js"></script>
    <script src="~/assets/libs/sweetalert2/dist/sweetalert2.all.min.js"></script>
    <script src="~/assets/libs/sweetalert2/sweet-alert.init.js"></script>
    <script src="~/assets/libs/moment/moment.js"></script>
    <script src="~/assets/libs/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
</div>

<script>
    $(document).ready(function() {
        loadDepartments();
    });
    
    function addDeparmentModal(){
        $('#addDepartmentModal').modal('show');
        
        loadHOD();
    
    }
    function loadHOD(){
        
        $.ajax({
            url: '@Url.Action("GetHODs", "Departments")',
            type: 'GET',
            success: function(result) {
                $('#cbHod').empty();

                $('#cbHod').append('<option>Select</option>');

                for (var i = 0; i < result.length; i++) {
                     $('#cbHod').append('<option value="' + result[i]["id"] + '">' + result[i]["name"] + '</option>');
                }
            },
            error: function(jqXHR, exception) {
                swal({
                    title: "ERROR STATUS " + jqXHR.status,
                    text: "Error Message: " + jqXHR.responseText,
                    type: "error",
                    showCancelButton: false,
                    confirmButtonText: "OK"
                });
            }
        });
    
    
    }
    
    function createDepartment(){
        
        var model = {
            name: $('#txtDepartmentName').val(),
            hod: $('#cbHod').val()
        }        
        $.ajax({
            url: '@Url.Action("CreateDepartment", "Departments")',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(model),
            contentType: "application/json; charset=utf-8",
            success: function(result) {
                
                 $('#addDepartmentModal').modal('hide');

                location.reload();

            },
            error: function(jqXHR, exception) { 
                swal({
                    title: "ERROR STATUS " + jqXHR.status,
                    text: "Error Message: " + jqXHR.responseText,
                    type: "error",
                    showCancelButton: false,
                    confirmButtonText: "OK"
                });
            }
        });
            
    }

    var tblDepartments = $('#tblDepartments').DataTable({
        createdRow: function(row, data, dataIndex) {
            $(row).attr('id', data.id);
        },
        "columns": [
            { "data": "departmentName" },
             { "data": "hodName" },
            { "data": "buttons" }
        ]
    });
    function loadDepartments(){
        $.ajax({
            url: `@Url.Action("AllDepartments", "Departments")`,
            type: 'GET',
            success: function(result) {

                var rows = [];

                for (var i = 0; i < result.length; i++) {

                    rows.push({
                        id: result[i].id,
                        departmentName: result[i].departmentName,
                        hodName: `<a href="@Url.Action("HODDetails", "AllUsers")?id=${result[i].hodId}">${result[i].hodName}</a>`,
                        buttons: `<div><button type="button" class="btn btn-sm btn-outline-info waves-effect waves-light align-content-end float-lg-right"
                                 onclick="viewDepartment('${result[i].id}')"
                                 style="margin-right: 3px" data-toggle="tooltip" data-original-title="View">
                                 <span><i class="fas fa-search" aria-hidden="true"></i> View</span>
                                 </button></div>`
                    });

                }

                tblDepartments.rows.add(rows).draw();

            },
            error: function(jqXHR, exception) {
                swal({
                    title: "ERROR STATUS " + jqXHR.status,
                    text: "Error Message: " + jqXHR.responseText,
                    type: "error",
                    showCancelButton: false,
                    confirmButtonText: "OK"
                });
            }
        });
    
    
    }
    
    function viewDepartment(id){
         $.ajax({
            url: `@Url.Action("DepartmentDetails", "Departments")?id=${id}`,
            type: 'GET',
            success: function(result) {
                window.location.href = `@Url.Action("DepartmentDetails", "Departments")?id=${id}`;
            },
            error: function(jqXHR, exception) {
                swal({
                    title: "ERROR STATUS " + jqXHR.status,
                    text: "Error Message: " + jqXHR.responseText,
                    type: "error",
                    showCancelButton: false,
                    confirmButtonText: "OK"
                });
            }
        });    
    }
    
</script>