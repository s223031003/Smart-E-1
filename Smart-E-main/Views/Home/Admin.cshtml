@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Mvc.Localization
@model IEnumerable<Smart_E.Models.ApplicationUser>
@{
    ViewBag.Title = "Admin Dashboard";
    Layout = "_Layout";

}
@inject IViewLocalizer _localizer

<!DOCTYPE html>
<html dir="ltr" lang="en">

<head>
    <link href="~/assets/libs/magnific-popup/dist/magnific-popup.css" rel="stylesheet">
    <link href="~/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.css" rel="stylesheet">
    <link href="~/assets/libs/footable/css/footable.core.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/assets/libs/select2/dist/css/select2.min.css">
    <link href="~/assets/libs/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.4.0/min/dropzone.min.css" />
    <link rel="stylesheet" type="text/css" href="~/assets/libs/bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.min.css">
</head>

<body>
<div class="preloader">
    <div class="lds-ripple">
        <div class="lds-pos"></div>
        <div class="lds-pos"></div>
    </div>
</div>

<div class="page-breadcrumb">
    <div class="row">
        <div class="col-5 align-self-center">
            <h3 class="page-title">@_localizer["ADMIN DASHBOARD"]</h3>
            <div class="d-flex align-items-center">
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <div class="card bg-outline-primary" style="max-width: 18rem;">
            <div class="card-header">Head of Department</div>
            <div class="card-body">  
                <h5 class="card-title">Switch to Head of Department</h5>
                <a class="card-text" asp-area="Identity" asp-page="/Account/Login" >
                    <i class="fa fa-user-circle fa-7x" aria-hidden="true"></i>
                </a>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-outline-secondary" style="max-width: 18rem;">
            <div class="card-header">Teacher</div>
            <div class="card-body">
                <h5 class="card-title">Switch to Teacher</h5>
                <a class="card-text" asp-area="Identity" asp-page="/Account/Login" >
                    <i class="fa fa-user-circle fa-7x" aria-hidden="true"></i>
                </a>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-outline-success" style="max-width: 18rem;">
            <div class="card-header">Student</div>
            <div class="card-body">
                <h5 class="card-title">Switch to Student</h5>
                <a class="card-text" asp-area="Identity" asp-page="/Account/Login" >
                    <i class="fa fa-user-circle fa-7x" aria-hidden="true"></i>
                </a>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-outline-warning" style="max-width: 18rem;">
            <div class="card-header">Parent</div>
            <div class="card-body">
                <h5 class="card-title">Switch to Parent</h5>
                <a class="card-text" asp-area="Identity" asp-page="/Account/Login" > 
                    <i class="fa fa-user-circle fa-7x" font- aria-hidden="true"></i>
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
   @* @using (Html.BeginForm("Export", "Admin"))
    {
        <input type="submit" value="Export" class="btn btn-success float-lg-right"/>
    }*@
    <div class="row"></div>
        <div class="col-12">
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tblUsers" class="table v-middle">
                        <thead>
                        <tr>
                            <th style="width: 160px;">@_localizer["Name"]</th>
                            <th style="width: 160px;">@_localizer["Email"]</th>
                            <th>@_localizer["Role"]</th>
                            <th style="width: 50px"></th>
                        </tr>
                        </thead>
                        <tbody>

                        <tfoot>
                        <tr>
                            <th>@_localizer["Name"]</th>
                            <th>@_localizer["Email"]</th>
                            <th>@_localizer["Role"]</th>
                            <th></th>
                        </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
@*
<div id="view-all">
    @await Html.PartialAsync("_ViewAllUsers", Model)
</div>*@


</body>



<div id="editUserModal" class="modal fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">User Role</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                </div>

                <div class="modal-body">

                    <div class="card-body">

                        <form>
                            <div class="form-group ">
                                <label for="txtEditName"> Name</label>
                                <input type="text" class="form-control" id="txtEditName" readonly="readonly">

                            </div>
                            <div class="form-group row">
                                <label for="cbRole" class="form-control" style="border: rgba(0, 0, 255, 0)">Role</label>
                                <div class="col-sm-12">
                                <input class="form-control" id="cbRole" readonly="readonly" />
                                </div>
                            </div>
                            
                            <input hidden="hidden" id="txtEditUserId" />
                        </form>
                    </div>
                </div>
                <div class="modal-footer">
@*                    <button type="button" onclick="javascript:updateUser();" class="btn btn-outline-info waves-effect float-lg-right" data-dismiss="modal">Update</button>
*@                </div>


            </div>
        </div>
    </div>
<div>
    <script src="~/assets/libs/moment/moment.js"></script>
    <script src="~/assets/libs/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker-custom.js"></script>
    <script src="~/assets/extra-libs/DataTables/datatables.min.js"></script>
    <script src="~/dist/js/pages/datatable/datatable-basic.init.js"></script>
    <script src="~/assets/libs/select2/dist/js/select2.full.min.js"></script>
    <script src="~/assets/libs/select2/dist/js/select2.min.js"></script>
    <script src="~/dist/js/pages/forms/select2/select2.init.js"></script>
    <script src="~/assets/libs/sweetalert2/dist/sweetalert2.all.min.js"></script>
    <script src="~/assets/libs/sweetalert2/sweet-alert.init.js"></script>
    <script src="~/assets/libs/moment/moment.js"></script>
    <script src="~/assets/libs/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script src="https://smtpjs.com/v3/smtp.js"></script>


</div>
<script>
      $(document).ready(function() {
        loadUsers();
    });
    var tblUsers = $('#tblUsers').DataTable({
        createdRow: function(row, data, dataIndex) {
            $(row).attr('id', data.id);
        },
        "columns": [
            { "data": "name" },
            { "data": "email" },
             { "data": "role" },
            { "data": "buttons" }
        ]
    });
    
    function updateUser()
    {
        var model = {
            id: $('#txtEditUserId').val(),
            name: $('#txtEditName').val(),
            role: $('#cbRole').val()
        };
        $.ajax({
            url: '@Url.Action("UpdateUser", "Users")',
            type: 'POST',
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(model),
            success: function(result) {

                $('#editUserModal').modal('hide');
                toastr.success('Success', 'User is Updated!');
                loadUsers();

            },
            error: function(jqXHR, exception) {
                swal({
                    title: "ERROR STATUS " + jqXHR.status,
                    text: "Error Message: " + jqXHR.responseText,
                    type: "error",
                    showCancelButton: false,
                    confirmButtonText: "OK"
                });
            }
        });
    
    }

    function loadUsers() {
        $.ajax({
            url: '@Url.Action("GetAllUsers", "Users")',
            type: 'GET',
            success: function(result) {

                var rows = [];

                for (var i = 0; i < result.length; i++) {

                    rows.push({
                        id: result[i].id,
                        name: result[i].name,
                        email: result[i].email,
                        role: result[i].role,
                        buttons: `<div><button type="button" class="btn btn-sm btn-outline-danger waves-effect waves-light align-content-end float-lg-right"
                            style="margin-right: 3px" data-toggle="tooltip" onclick="javascript:deleteUser('${result[i].id}', '${result[i].roleId}');"
                            data-original-title="Email"><span><i class="fas fa-trash" aria-hidden="true"></i> Delete</span></button></div>
                            <button type="button" class="btn btn-sm btn-outline-warning waves-effect waves-light align-content-end float-lg-right"
                            style="margin-right: 3px" data-toggle="tooltip" onclick="javascript:editUserRoles('${result[i].id}');"
                            data-original-title="Manage Roles"><span><i class="fas fa-users" aria-hidden="true"></i> View User</span></button></div>`

                    });

                }

                tblUsers.rows.add(rows).draw();

            },
            error: function(jqXHR, exception) {
                swal({
                    title: "ERROR STATUS " + jqXHR.status,
                    text: "Error Message: " + jqXHR.responseText,
                    type: "error",
                    showCancelButton: false,
                    confirmButtonText: "OK"
                });
            }
        });
    }
    
    function editUserRoles(id)
    {
        $.ajax({
            url: `@Url.Action("GetUser", "Users")?id=${id}`,
            type: 'GET',
            success: function(result) {
                 $('#editUserModal').modal('show');    
                 $('#txtEditUserId').val(result.id);
                 $('#txtEditName').val(result.name);
                 $('#cbRole').val(result.role);
                 loadRoles();
            },
            error: function(jqXHR, exception) {
                swal({
                    title: "ERROR STATUS " + jqXHR.status,
                    text: "Error Message: " + jqXHR.responseText,
                    type: "error",
                    showCancelButton: false,
                    confirmButtonText: "OK"
                });
            }
        });
    
    }
    
    function deleteUser(id, roleId){
    swal({
            title: "CONFIRM",
            text: "Are you sure that you want to remove this user?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, remove user!"
        }).then((ok) => {

            if (JSON.stringify(ok) === '{"value":true}') {
                $.ajax({
                    url: `@Url.Action("DeleteUser", "Users")?id=${id}&roleId=${roleId}`,
                    type: 'DELETE',
                    success: function(result) {

                        loadUsers();
                        toastr.success('Success', 'User is removed');


                    },
                    error: function(jqXHR, exception) {
                        swal({
                            type: "error",
                            title: "ERROR STATUS " + jqXHR.status,
                            text: "Error Message: " + jqXHR.responseText,
                            showCancelButton: false,
                            confirmButtonText: "OK"
                        });
                    }
                });
            }

        });
    }
    function loadRoles()
    {
        $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAllUserRoles", "Users")',
                success: function(result) {
                    /*$('#cbRole').empty();
                    $('#cbRole').append($("<option>SELECT</option>"));*/

                    for (var i = 0; i < result.length; i++) {
                       $('#cbRole').append($("<option></option>").attr("value", result[i].id).text(result[i].name));
                        
                    }
                },
                error: function(jqXHR, exception) {
                    swal({
                        title: "ERROR STATUS " + jqXHR.status,
                        text: "Error Message: " + jqXHR.responseText,
                        type: "error",
                        showCancelButton: false,
                        confirmButtonText: "OK"
                    });
                }
            });
        
    }

</script>